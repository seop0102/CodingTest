#include <iostream>

using namespace std;
template <typename T>

class SimpleVector {
private:
    T* data;
    int currentSize;
    int currentCapacity;
    
public:
    void resize() {
        
    }
    SimpleVector() { //크기가 10인 배열을 만든다.
        currentSize = 0 ;
        currentCapacity = 10;
        data = new T [ currentCapacity];
        cout << "크기가 10인 배열" << endl;
    }
    SimpleVector(int capacity){ //해당 숫자에 해당되는 크기의 배열을 만든다.
        currentSize=0;
        currentCapacity = capacity;
        data = new T[currentCapacity];
        cout << currentCapacity << " 크기의 배열" <<endl;
    }
    ~SimpleVector() {
        delete[] data;
    }
    void push_back(const T& value) {
        if (currentSize < currentCapacity ) {
            data[currentSize] = value;
            currentSize++;
            cout << value << " 을 맨 뒤에 추가" <<endl;
        }
        else {
            cout<<"꽉 차서 추가 못함!"<<endl;
        }
    }
    void pop_back() {
        if(currentSize > 0 ){
            cout<<data[currentSize-1]<<" 제거" <<endl; 
            currentSize--;
        }else {
            cout<<"원소가 없어서 제거 못함!"<<endl;
        }
    }
    int size() {
        return currentSize;
    }
    int capacity() {
        return currentCapacity;
    }
};

int main() {
    SimpleVector<int> vec(5);
    for (int i = 1; i<10; i ++ ) {
        vec.push_back(i);
    }
    for(int j = 1 ; j< 10 ; j++) {
        vec.pop_back();
    }

    cout << "사이즈(배열안에 들어있는 원소의 갯수) :  " << vec.size() << endl;
    cout << "이 배열의 용량 : " << vec.capacity() << endl;
}
